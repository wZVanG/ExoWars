service: exowars

frameworkVersion: '4'

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  environment:
    NODE_ENV: ${opt:stage, 'dev'}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Query
            - dynamodb:Scan
          Resource: 
            - arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/exowars_cache
            - arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/planeta_relaciones

plugins:
  - serverless-dotenv-plugin
  - serverless-offline

package:
  individually: true
  patterns:
    - '!src/**'
    - 'dist/**'

functions:
  api:
    handler: dist/handler.handler
    events:
      - http:
          path: /fusionados
          method: get
          cors: true
      - http:
          path: /almacenar
          method: post
          cors: true
      - http:
          path: /historial
          method: get
          cors: true
      - http:
          path: /imagenes/{exoplaneta}
          method: get
          cors: true
      - http:
          path: /health
          method: get
          cors: true
      - http:
          path: /generate-token
          method: get
          cors: true
      - http:
          path: /limpiar
          method: get
          cors: true

custom:
  dotenv:
    path: .env
    include:
      - JWT_SECRET
      - NASA_KEY
      - DATABASE_TYPE
  serverless-offline:
    httpPort: 3000
    noPrependStageInUrl: true 

  